* CONVERTING STRUCTURES FROM .COOR TO PDB
* FOR POSITIONAL RESTRAINTS FOR TMD
* Antoniel A. S. Gomes & D. Perahia (2024)
*

DIMENS CHSIZE 3000000 MAXRES 3000000

! Read topology and parameter files
stream toppar.str

! Read PSF
open read unit 10 card name ./inputs/step3.psf
read psf  unit 10 card xplor

! Read Coordinate
!open read unit 10 card name ./crd/step6.crd
!read coor unit 10 card
read namd file "./inputs/step6.coor"

!
! Setup PBC (Periodic Boundary Condition)
!

stream ./inputs/step3.str

!
! Image Setup
!

open read unit 10 card name ./inputs/crystal_image.str
CRYSTAL DEFINE @XTLtype @A @B @C @alpha @beta @gamma
CRYSTAL READ UNIT 10 CARD

!Image centering by residue
IMAGE BYRESID XCEN @xcen YCEN @ycen ZCEN @zcen sele resname TIP3 end
IMAGE BYRESID XCEN @xcen YCEN @ycen ZCEN @zcen sele ( segid @posid .or. segid @negid ) end

!
! Nonbonded Options
!

!updat ihbfrq -1 inbfrq -1 switch rdie eps 2 vswitch ctonnb 3 ctofnb 6 cutnb 10 wrnmxd 1.0
!skip CMAP ! Prevents dimb's Segmentation fault after space allocation
!energy

!
! Restraint to place center of mass of the molecules near the origin
!

MMFP
GEO rcm sphere -
    Xref @xcen Yref @ycen Zref @zcen XDIR 1.0 YDIR 1.0 ZDIR 1.0 -
    harmonic FORCE 1.0 select @PROT end
END

!
! Minimization to a very low energy (< 10E-06)
! to prevent erros during Normal Modes Calculation
! Positional restraints for minimization
!

define PROT sele ( @PROT ) end
!delete atoms sele .not. PROT end

define PROT sele ( @PROT ) end
define CARB sele none end
define HETE sele none end

define BB   sele ( ( type C   .or. type O   .or. type N   .or. type CA  .or. -
                     type P   .or. type O1P .or. type O2P .or. type O5' .or. -
                     type C5' .or. type C4' .or. type C3' .or. type O3' ) .and. PROT ) .or. -
                 ( ( type C+ .or. ( type O5 .and. .bonded. type C1 ) .or. ( type O6 .and. .bonded. type C2 ) ) .and. CARB ) .or. -
                 ( .not. hydrogen .and. HETE ) end
define SC   sele .not. BB .and. .not. hydrogen .and. ( PROT .or. CARB ) end

set rep = 1
label replica

 set dstep = 0
 label steps

  read namd file "./dpmdnm/mode-@REP/tmd/tmd_@REP_@DSTEP.coor"

  scalar WMAIN set 1.0 sele ( PROT ) end
  scalar WMAIN set 0.0 sele .not. ( PROT ) end

  open write card unit 10 name ./dpmdnm/mode-@REP/restraints_@DSTEP.pdb
  write coor pdb  unit 10 official
  * Structure generated by VMOD
  * Saved to be used for an equilibration step with constraints
  * Replica = @REP
  * DSTEP = @DSTEP
  *

  incr dstep by 0.1
 if dstep .le. 3 goto steps

incr rep by 1
if rep .le. @ncomb goto replica

stop
