* ALL-ATOMIC NORMAL MODE CALCULATIONS
* Antoniel A. S. Gomes & D. Perahia (2024)
*

DIMENS CHSIZE 3000000 MAXRES 3000000

! Read topology and parameter files
stream toppar.str

! Read PSF
open read unit 10 card name ./inputs/step3.psf
read psf  unit 10 card xplor

! Read Coordinate
!open read unit 10 card name ./crd/step6.crd
!read coor unit 10 card
read namd file "inputs/step6.coor"

!
! Setup PBC (Periodic Boundary Condition)
!

!WARNING: NO HESSIAN WITH IMAGES

stream ./inputs/step3.str

!
! Image Setup
!

!open read unit 10 card name ./inputs/crystal_image.str
!CRYSTAL DEFINE @XTLtype @A @B @C @alpha @beta @gamma
!CRYSTAL READ UNIT 10 CARD

!Image centering by residue
!IMAGE BYRESID XCEN @xcen YCEN @ycen ZCEN @zcen sele resname TIP3 end
!IMAGE BYRESID XCEN @xcen YCEN @ycen ZCEN @zcen sele ( segid @posid .or. segid @negid ) end

!
! Nonbonded Options
!

updat ihbfrq -1 inbfrq -1 switch rdie eps 2 vswitch ctonnb 3 ctofnb 6 cutnb 10 wrnmxd 1.0
skip CMAP ! Prevents dimb's Segmentation fault after space allocation
energy

!
! Restraint to place center of mass of the molecules near the origin
!

MMFP
GEO rcm sphere -
    Xref @xcen Yref @ycen Zref @zcen XDIR 1.0 YDIR 1.0 ZDIR 1.0 -
    harmonic FORCE 1.0 select @PROT end
END

!
! Minimization to a very low energy (< 10E-06)
! to prevent erros during Normal Modes Calculation
! Positional restraints for minimization
!

define PROT sele ( @PROT ) end
delete atoms sele .not. PROT end

define PROT sele ( @PROT ) end
define CARB sele none end
define HETE sele none end

define BB   sele ( ( type C   .or. type O   .or. type N   .or. type CA  .or. -
                     type P   .or. type O1P .or. type O2P .or. type O5' .or. -
                     type C5' .or. type C4' .or. type C3' .or. type O3' ) .and. PROT ) .or. -
                 ( ( type C+ .or. ( type O5 .and. .bonded. type C1 ) .or. ( type O6 .and. .bonded. type C2 ) ) .and. CARB ) .or. -
                 ( .not. hydrogen .and. HETE ) end
define SC   sele .not. BB .and. .not. hydrogen .and. ( PROT .or. CARB ) end

coor copy comp

set bb = 1.0
set sc = 0.1

set tol = 10E-06

label preminimization

  cons harm force @bb sele BB end
  cons harm force @sc sele SC end

  mini sd   nstep 1000 tolgrd @tol nprint 100
  mini conj nstep 5000 tolgrd @tol nprint 100

  cons harm clear

  decr bb by 0.1
  decr sc by 0.01

if bb .gt. 0.0 goto preminimization

mini sd   nstep 1000 tolgrd @tol nprint 100
mini conj nstep 5000 tolgrd @tol nprint 100

label minimization

  mini abnr nstep 10000 tolgrd @tol nprint 100

if ?GRMS .ge. @tol goto minimization

cons harm clear

! RMSD after minimization

coor orient comp rms select PROT .and. type CA .or. type N .or. type C .or. type O end

set rmsd = ?RMS

!
! Normal Modes Calculation
! Number of Modes of a non-linear molecule = 3N - 6
! N = number of atoms
! first 6 degrees of freedom are translationals/rotationals
! Usually 200 modes is enough
! 200 nmodes result in 103 basis vectors: (NMODes+6)/2 = 103
! nblocks : approximated number of atoms per block
! PARDim  : block length limit (default = 200)
! CUTFreq : modes with frequency below to CUTF will be calculated
! NMODes must to be less than PARDim*3
!

set nblocks = 490
calc pardim = int( ?NATO / ( int( ?NATO / @nblocks ) ) )

system "mkdir modes"

open write file unit 41 name ./modes/modes.mod

calc basis = ( @nmodes * 2 ) - 6
!calc nmodes = ( @basis + 6 ) / 2

vibran nmodes @basis

dimb cutf 30 iter 1000 tole @tol savf 100 iunmod 41 pard @pardim

write norm file unit 41 mode 1 thru @basis
* Normal Modes of Protein
* @nmodes Normal Modes Calculated
*

close unit 41

! Fluctuation of all modes

fluct atom temp @temp tfreq 0.1 mode 7 thru 200

end

! Fluctuations in Angstrom
scalar xcomp store 1
scalar ycomp +stor 1
scalar zcomp +stor 1
scalar wcomp recal 1
scalar wcomp divi 3
scalar wmain copy wcomp

SCALar WMAIN SHOW SELE TYPE CA END

open write card unit 10 name ./modes/minimized-angstrom.pdb
write coor pdb  unit 10 official
* Minimized Structure used in Normal Modes Calculation
* Fluctuations in Angstrom
* Mode 7 to @nmodes
* RMSD = @rmsd
*

open write unit 10 card name ./modes/minimized-angstrom.crd
write coor unit 10 card
* Minimized Structure used in Normal Modes Calculation
* Fluctuations in Angstrom
* Mode 7 to @nmodes
* RMSD = @rmsd
*

!
! Converting Fluctuations to B-factor
! B-factor = ( ( (8* ( ?PI ** 2)) * ( RMSF ** 2 ) ) / 3 )
!

calc factor = 8 * ?PI ** 2 / 3

scalar wcomp multi @factor
scalar wmain copy wcomp

SCALar WMAIN SHOW SELE TYPE CA END

open write card unit 10 name ./modes/minimized-b-factor.pdb
write coor pdb  unit 10 official
* Minimized Structure used in Normal Modes Calculation
* Fluctuations as B-Factor
* Mode 7 to @nmodes
* RMSD = @rmsd
*

open write unit 10 card name ./modes/minimized-b-factor.crd
write coor unit 10 card
* Minimized Structure used in Normal Modes Calculation
* Fluctuations as B-Factor
* Mode 7 to @nmodes
* RMSD = @rmsd
*

! Vector magnitude = sqrt(x**2 + y**2 + z**2)

scalar xcomp pow2r
scalar ycomp pow2r
scalar zcomp pow2r
scalar xcomp store 2
scalar ycomp +stor 2
scalar zcomp +stor 2
scalar wcomp recal 2
scalar wcomp sqrt
scalar wmain copy wcomp

SCALar WMAIN SHOW SELE TYPE CA END

open write card unit 10 name ./modes/minimized-vector-magnitude.pdb
write coor pdb  unit 10 official
* Minimized Structure used in Normal Modes Calculation
* Vector Magnitude Fluctuations
* Mode 7 to @nmodes
* RMSD = @rmsd
*

open write unit 10 card name ./modes/minimized-vector-magnitude.crd
write coor unit 10 card
* Minimized Structure used in Normal Modes Calculation
* Vector Magnitude Fluctuations
* Mode 7 to @nmodes
* RMSD = @rmsd
*

stop
