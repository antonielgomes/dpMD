* NORMAL MODE COMBINATION TO A MOD FILE
* WEIGHTS ARE USED AS INPUT
* TRAJECTORIES TO DCD FILES
* VECTORS TO CRD FILES
* Antoniel A. S. Gomes & D. Perahia (2024)
*

DIMENS CHSIZE 3000000 MAXRES 3000000

! Read topology and parameter files
stream toppar.str

! Read PSF
open read unit 10 card name ./inputs/step3.psf
read psf  unit 10 card xplor

! Read Coordinate
!!reading charmm file coordinate
!open read unit 10 card name ./crd/step6.crd
!read coor unit 10 card
read namd file "./inputs/step6.coor"

stream ./inputs/step3.str

define PROT sele ( @PROT ) end
delete atoms sele .not. PROT end
define PROT sele ( @PROT ) end

! generate directory for crd and dcd file

system "mkdir -p ./modes/combined-modes/crd/"
system "mkdir -p ./modes/combined-modes/dcd/"

! store structure coordinates (for generating dcd files properly)
scalar x +sto 1
scalar y +sto 2
scalar z +sto 3


! iterate to generate @ncomb combined normal modes
set combnu = 1

label combinations
  
  scalar x set 0
  scalar y set 0
  scalar z set 0
  scalar xcomp set 0
  scalar ycomp set 0
  scalar zcomp set 0
  
  ! read modes from input file
  open read card unit 13 name @inputfile

  ! define column nomber to get the correct weight value
  set col = 1

  label combine

    get modnu unit 13
    if modnu .eq. END-OF-FILE goto writemode

    ! puts weight to a file, then reads as input
    system "sed ''@COMBNU'q;d' `echo '@LISTMODES'| awk '{print tolower($0)}'` | awk '{print $'@COL'}' > weight"
    open unit 2 read card name ./weight
    get weight unit 2
    close unit 2

    ! adds weight to the vector
    open read file unit 41 name ./modes/modes.mod
    vibran nmodes @nmodes
    read norm file unit 41 mode 1 thru @nmodes
    fill comp mode @modnu fact @weight
    end

    ! sum vectors
    scalar x SUM xcomp
    scalar y SUM ycomp
    scalar z SUM zcomp
    
    incr col by 1
  goto combine
  
  label writemode

    open write card unit 12 name ./modes/combined-modes/crd/mode-@combnu.crd
    write coor card unit 12
    * COMBINED NORMAL MODE VECTOR @combnu
    *

    incr combnu by 1
  if @combnu .le. @ncomb goto combinations

! creat mod file for normal mode combination
open write file unit 42 name ./modes/combined-modes.mod

update inbf 0
vibran nmodes @ncomb
set count 1
label generatemodes
  open read unit 12 card name ./modes/combined-modes/crd/mode-@count.crd
  coor read unit 12 card comp
  edit incl comp
  close unit 12
  incr count by 1
if count .le. @ncomb goto generatemodes
write norm file unit 42
* Linear combination of normal modes
*
end

! recall structure coordinates
scalar x recall 1
scalar y recall 2
scalar z recall 3

open read file unit 43 name ./modes/combined-modes.mod

vibran nmodes @ncomb
read norm unit 43 mode 1 thru @ncomb
!NOMASS

set name 0
set mode 0

label loop
increment name by 1
increment mode by 1
open write file unit 10 name ./modes/combined-modes/dcd/mode-@name.dcd
open write card unit 12 name ./modes/combined-modes/crd/combined-mode-@name.crd
write traj mode @mode mrms 2 phase 7.2 unit 10
fill comp mode @mode fact 1.0
coor write card comp unit 12
if @mode .lt. @ncomb goto loop
end

! remove the weight file
system "rm weight"
stop
